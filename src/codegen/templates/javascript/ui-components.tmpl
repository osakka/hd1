// ===================================================================
// AUTO-GENERATED UI COMPONENTS - DO NOT MODIFY
// ===================================================================
//
// Standard UI components auto-generated from OpenAPI specification
// Updates automatically when API specification changes
//
// ===================================================================

class HD1UIComponents {
    constructor(apiClient) {
        this.api = apiClient;
        this.components = new Map();
        this.initializeComponents();
    }

    initializeComponents() {
        console.log('ðŸŽ¨ Initializing auto-generated UI components...');
{{range .Components}}
        this.components.set('{{.Name}}', this.create{{.ClassName}}Component());
{{end}}
        console.log('âœ… UI components initialized');
    }

{{range .Components}}
    // {{.Comment}}
    create{{.ClassName}}Component() {
        return {
            name: '{{.Name}}',
            endpoint: '{{.Endpoint}}',
            method: '{{.Method}}',
            
            render: (containerId) => {
                const container = document.getElementById(containerId);
                if (!container) {
                    console.error('Container not found:', containerId);
                    return;
                }
                
                container.innerHTML = '{{.HTML}}';
                this.attachEventListeners('{{.Name}}', container);
            },
            
            execute: async ({{.ExecuteParams}}) => {
                try {
                    const result = await this.api.{{.APIMethod}}({{.APIParams}});
                    this.showResult('{{.Name}}', result);
                    return result;
                } catch (error) {
                    this.showError('{{.Name}}', error);
                    throw error;
                }
            }
        };
    }
{{end}}

    attachEventListeners(componentName, container) {
        const component = this.components.get(componentName);
        if (!component) return;
        
        const form = container.querySelector('form');
        if (form) {
            form.addEventListener('submit', async (e) => {
                e.preventDefault();
                const formData = new FormData(form);
                const data = Object.fromEntries(formData.entries());
                
                try {
                    await component.execute(data);
                } catch (error) {
                    console.error('Component execution failed:', error);
                }
            });
        }
    }

    showResult(componentName, result) {
        const resultDiv = document.getElementById(componentName + '-result');
        if (resultDiv) {
            resultDiv.innerHTML = '<pre class="success">' + JSON.stringify(result, null, 2) + '</pre>';
        }
    }

    showError(componentName, error) {
        const resultDiv = document.getElementById(componentName + '-result');
        if (resultDiv) {
            resultDiv.innerHTML = '<pre class="error">Error: ' + error.message + '</pre>';
        }
    }

    getComponent(name) {
        return this.components.get(name);
    }

    renderAll(containerId) {
        const container = document.getElementById(containerId);
        if (!container) {
            console.error('Container not found:', containerId);
            return;
        }
        
        container.innerHTML = '<h2>HD1 API Interface</h2>';
        this.components.forEach((component, name) => {
            const div = document.createElement('div');
            div.className = 'component-container';
            div.id = name + '-container';
            container.appendChild(div);
            component.render(name + '-container');
        });
    }
}

// Export for global use
window.HD1UIComponents = HD1UIComponents;

console.log('ðŸŽ¨ HD1 UI Components loaded - Auto-generated from specification');